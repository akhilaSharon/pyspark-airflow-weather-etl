
services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - pgdata:/var/lib/postgresql/data

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

  mc:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      mc alias set local http://minio:9000 minio minio123 &&
      mc mb -p local/bronze local/silver local/gold || true &&
      tail -f /dev/null
      "

  airflow:
    image: apache/airflow:2.10.2-python3.11
    depends_on:
      - postgres
      - minio
    environment:
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      S3_ENDPOINT: "http://minio:9000"
      S3_ACCESS_KEY: "minio"
      S3_SECRET_KEY: "minio123"
      DOCKER_HOST: "unix:///var/run/docker.sock"
      _PIP_ADDITIONAL_REQUIREMENTS: "boto3 requests pyyaml"
      # Create the admin user Airflow expects in standalone logs
      _AIRFLOW_WWW_USER_USERNAME: "admin"
      _AIRFLOW_WWW_USER_PASSWORD: "admin"
    volumes:
      - ../dags:/opt/airflow/dags
      - ../apps:/opt/airflow/apps
      - ../spark_jobs:/opt/airflow/spark_jobs
      - ../config:/opt/airflow/config
      - /var/run/docker.sock:/var/run/docker.sock 
    ports:
      - "8080:8080"     # if 8080 is busy, change to "8088:8080"
    restart: unless-stopped
    command: >
      bash -lc "
      set -e;
      rm -f /opt/airflow/airflow-webserver.pid;
      airflow db migrate || airflow db init;
      exec airflow standalone
      "


  spark:
    image: bitnami/spark:3.5.1
    environment:
      SPARK_MODE: master
    ports:
      - "7077:7077"
      - "8081:8080"
    volumes:
      - ../spark_jobs:/opt/spark_jobs
      - ./spark/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf


  spark-worker-1:
    image: bitnami/spark:3.5.1
    depends_on:
      - spark
    environment:
      SPARK_MODE: worker
      SPARK_MASTER_URL: spark://spark:7077
      SPARK_WORKER_CORES: 2
      SPARK_WORKER_MEMORY: 2G
    volumes:
      - ../spark_jobs:/opt/spark_jobs
      - ./spark/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf


volumes:
  pgdata:
  minio_data:

  


